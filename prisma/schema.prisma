generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Appointment {
  id                String   @id @default(cuid())
  clientName        String
  clientPhone       String
  service           String
  status            String   @default("confirmed") // confirmed, cancelled_by_barber, cancelled_by_client, rescheduled, completed
  requestedAt       DateTime @default(now())
  scheduledAt       DateTime // Fecha/hora seleccionada por el cliente (ahora requerida)
  duration          Int      // Duración en minutos (ahora requerida)
  notes             String?
  cancellationReason String?  // Razón de cancelación
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model BarberSchedule {
  id        String @id @default(cuid())
  dayOfWeek Int    // 0=Domingo, 1=Lunes, ..., 6=Sábado
  startTime String // "09:00"
  endTime   String // "18:00"
  isActive  Boolean @default(true)
}

model ServiceDuration {
  id       String @id @default(cuid())
  service  String @unique
  duration Int    // Duración en minutos
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  role          String    @default("barber")
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}